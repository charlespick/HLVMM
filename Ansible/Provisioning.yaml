---
- name: Provision VM
  hosts: "{{ hyperv_host }}"
  gather_facts: no

  tasks:
    - name: Determine OS Family from Image Name
      set_fact:
        os_family: >-
          {%- if image_name is regex_match('^(Windows|Microsoft Windows).*', ignorecase=true) -%}
          windows
          {%- elif image_name is regex_match('^(Ubuntu|Red Hat Enterprise Linux|RHEL|CentOS|Rocky Linux|AlmaLinux|Oracle Linux|Debian|SUSE|openSUSE|Fedora).*', ignorecase=true) -%}
          linux
          {%- else -%}
          {{ fail('Unsupported OS detected in image_name: ' + image_name + '. Supported OS families: Windows*, Microsoft Windows*, Ubuntu*, Red Hat Enterprise Linux*, RHEL*, CentOS*, Rocky Linux*, AlmaLinux*, Oracle Linux*, Debian*, SUSE*, openSUSE*, Fedora*') }}
          {%- endif -%}

    - name: Set default domain credentials if specified
      set_fact:
        guest_domain_joinuid: "{{ default_guest_domain_joinuid }}"
        guest_domain_joinpw: "{{ default_guest_domain_joinpw }}"
        guest_domain_jointarget: "{{ default_guest_domain_jointarget }}"
      when: use_default_domain_credentials is defined and use_default_domain_credentials == "Yes"

    - name: Set default domain OU if specified
      set_fact:
        guest_domain_joinou: "{{ default_guest_domain_joinou }}"
      when: use_default_domain_ou is defined and use_default_domain_ou == "Yes"

    - name: Clear domain join data for Linux systems
      block:
        - name: Display warning about domain join not supported on Linux
          debug:
            msg: "WARNING: Domain join is not supported for Linux systems. Clearing all domain join variables."
          when: >
            (guest_domain_joinuid is defined and guest_domain_joinuid|length > 0) or
            (guest_domain_joinpw is defined and guest_domain_joinpw|length > 0) or
            (guest_domain_jointarget is defined and guest_domain_jointarget|length > 0) or
            (guest_domain_joinou is defined and guest_domain_joinou|length > 0) or
            (use_default_domain_credentials is defined and use_default_domain_credentials == "Yes") or
            (use_default_domain_ou is defined and use_default_domain_ou == "Yes")

        - name: Clear domain join variables
          set_fact:
            guest_domain_joinuid: ""
            guest_domain_joinpw: ""
            guest_domain_jointarget: ""
            guest_domain_joinou: ""
      when: os_family == "linux"

    - name: Set default Ansible credentials if specified
      set_fact:
        ansible_ssh_user: "{{ default_ansible_ssh_user }}"
        ansible_ssh_key: "{{ default_ansible_ssh_key }}"
      when: use_default_ansible_creds is defined and use_default_ansible_creds == "Yes"

    - name: Clear Ansible SSH credentials for Windows systems
      block:
        - name: Display warning about Ansible SSH not supported on Windows
          debug:
            msg: "WARNING: Ansible SSH credentials are not supported for Windows systems. Clearing all Ansible SSH variables."
          when: >
            (ansible_ssh_user is defined and ansible_ssh_user|length > 0) or
            (ansible_ssh_key is defined and ansible_ssh_key|length > 0) or
            (use_default_ansible_creds is defined and use_default_ansible_creds == "Yes")

        - name: Clear Ansible SSH variables
          set_fact:
            ansible_ssh_user: ""
            ansible_ssh_key: ""
      when: os_family == "windows"

    - name: Copy Image
      ansible.windows.win_command: >
        powershell.exe -ExecutionPolicy Bypass -File "C:\Program Files\Home Lab Virtual Machine Manager\CopyImage.ps1"
        -VMName "{{ vm_name }}"
        -ImageName "{{ image_name }}"
      register: copyimage_result

    - name: Copy Provisioning ISO
      ansible.windows.win_command: >
        powershell.exe -ExecutionPolicy Bypass -File "C:\Program Files\Home Lab Virtual Machine Manager\CopyProvisioningISO.ps1"
        -OSFamily {{ os_family }}
        -VMDataFolder "{{ copyimage_result.stdout | trim }}"

    - name: Register VM
      ansible.windows.win_command: >
        powershell.exe -ExecutionPolicy Bypass -File "C:\Program Files\Home Lab Virtual Machine Manager\RegisterVM.ps1"
        -OSFamily "{{ os_family }}"
        -GBRam {{ gb_ram }}
        -CPUcores {{ cpu_cores }}
        -VMDataFolder "{{ copyimage_result.stdout | trim }}"
        {% if vlan_id is defined and vlan_id > 0 %}-VLANId {{ vlan_id }}{% endif %}

    - name: Wait For Provisioning to Start
      ansible.windows.win_command: >
        powershell.exe -ExecutionPolicy Bypass -File "C:\Program Files\Home Lab Virtual Machine Manager\WaitForProvisioningKey.ps1"
        -VMName {{ vm_name }}

    - name: Publish Provisioning Data
      ansible.windows.win_command: >
        powershell.exe -ExecutionPolicy Bypass -File "C:\Program Files\Home Lab Virtual Machine Manager\PublishProvisioningData.ps1"
        -GuestHostName {{ vm_name }}
        -GuestLaUid {{ guest_la_uid }}
        {% if guest_v4_ipaddr is defined and guest_v4_ipaddr|length > 0 %}-GuestV4IpAddr {{ guest_v4_ipaddr }}{% endif %}
        {% if guest_v4_cidrprefix is defined and guest_v4_cidrprefix > 0 %}-GuestV4CidrPrefix {{ guest_v4_cidrprefix }}{% endif %}
        {% if guest_v4_defaultgw is defined and guest_v4_defaultgw|length > 0 %}-GuestV4DefaultGw {{ guest_v4_defaultgw }}{% endif %}
        {% if guest_v4_dns1 is defined and guest_v4_dns1|length > 0 %}-GuestV4Dns1 {{ guest_v4_dns1 }}{% endif %}
        {% if guest_v4_dns2 is defined and guest_v4_dns2|length > 0 %}-GuestV4Dns2 {{ guest_v4_dns2 }}{% endif %}
        {% if guest_net_dnssuffix is defined and guest_net_dnssuffix|length > 0 %}-GuestNetDnsSuffix {{ guest_net_dnssuffix }}{% endif %}
        {% if guest_domain_jointarget is defined and guest_domain_jointarget|length > 0 %}-GuestDomainJoinTarget {{ guest_domain_jointarget }}{% endif %}
        {% if guest_domain_joinuid is defined and guest_domain_joinuid|length > 0 %}-GuestDomainJoinUid {{ guest_domain_joinuid }}{% endif %}
        {% if guest_domain_joinou is defined and guest_domain_joinou|length > 0 %}-GuestDomainJoinOU {{ guest_domain_joinou }}{% endif %}
        {% if ansible_ssh_user is defined and ansible_ssh_user|length > 0 %}-AnsibleSshUser {{ ansible_ssh_user }}{% endif %}
        {% if ansible_ssh_key is defined and ansible_ssh_key|length > 0 %}-AnsibleSshKey {{ ansible_ssh_key }}{% endif %}
      environment:
        GuestLaPw: "{{ guest_la_pw }}"
        GuestDomainJoinPw: "{{ guest_domain_joinpw | default('') }}"
      # no_log: true

    - block:
        - name: Enable CredSSP server role
          ansible.windows.win_shell: >
            powershell.exe -ExecutionPolicy Bypass -Command
            "Enable-WSManCredSSP -Role Server -Force"

        - name: Add VM to Cluster (using CredSSP)
          ansible.windows.win_command: >
            powershell.exe -ExecutionPolicy Bypass -Command
            "Add-ClusterVirtualMachineRole -VMName '{{ vm_name }}'"
          vars:
            ansible_winrm_transport: credssp

        - name: Disable CredSSP server role
          ansible.windows.win_shell: >
            powershell.exe -ExecutionPolicy Bypass -Command
            "Disable-WSManCredSSP -Role Server"
      when: vm_clustered is defined and vm_clustered == "Yes"
